# -*- coding: utf-8 -*-

"""
wordsapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class FrequencyDetails(object):

    """Implementation of the 'FrequencyDetails' model.

    This model contains frequency details of a specific word.

    Attributes:
        zipf (float): Explains the zipf score.
        per_million (float): Explains the perMillion score.
        diversity (float): Explains the diversity score.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "zipf": 'zipf',
        "per_million": 'perMillion',
        "diversity": 'diversity'
    }

    def __init__(self,
                 zipf=None,
                 per_million=None,
                 diversity=None):
        """Constructor for the FrequencyDetails class"""

        # Initialize members of the class
        self.zipf = zipf 
        self.per_million = per_million 
        self.diversity = diversity 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        zipf = dictionary.get("zipf") if dictionary.get("zipf") else None
        per_million = dictionary.get("perMillion") if dictionary.get("perMillion") else None
        diversity = dictionary.get("diversity") if dictionary.get("diversity") else None
        # Return an object of this model
        return cls(zipf,
                   per_million,
                   diversity)
